rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // SECURITY: Allow public read access to user data
      // This is required for email notifications and user profile displays for non-authenticated users
      allow read: if true;
      // Only allow users to write their own data
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects collection
    match /projects/{projectId} {
      // Anyone can read projects
      allow read: if true;
      // Only authenticated users can create projects
      allow create: if request.auth != null;
      // Allow anyone to update just the totalIssues and closedIssues fields
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['totalIssues', 'closedIssues']) ||
                     // Only the project owner can update other fields
                     (request.auth != null && request.auth.uid == resource.data.ownerId);
      // Only the project owner can delete projects
      allow delete: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
    
    // Threads collection
    match /threads/{threadId} {
      // Anyone can read threads
      allow read: if true;
      // Anyone can create threads (authenticated or anonymous)
      allow create: if true;
      // Anyone can update threads (for response count)
      allow update: if true;
      // Only the project owner can delete threads
      allow delete: if request.auth != null && 
          (request.auth.uid == resource.data.authorId || 
           getProject(resource.data.projectId).ownerId == request.auth.uid);
    }
    
    // Responses collection
    match /responses/{responseId} {
      // Anyone can read responses
      allow read: if true;
      // Anyone can create responses (authenticated or anonymous)
      allow create: if true;
      // Anyone can update their own responses
      allow update: if true;
      // Only the response author or project owner can delete responses
      allow delete: if request.auth != null && 
          (request.auth.uid == resource.data.authorId || 
           getProject(getThread(resource.data.threadId).projectId).ownerId == request.auth.uid);
    }
    
    // Helper function to get a project document
    function getProject(projectId) {
      return get(/databases/$(database)/documents/projects/$(projectId)).data;
    }
    
    // Helper function to get a thread document
    function getThread(threadId) {
      return get(/databases/$(database)/documents/threads/$(threadId)).data;
    }
  }
} 